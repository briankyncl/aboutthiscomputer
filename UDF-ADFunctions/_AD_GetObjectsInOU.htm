<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <title>Function _AD_GetObjectsInOU</title>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
  <link href="../css/default.css" rel="stylesheet" type="text/css">
</head>

<body>
<h1>Function Reference</h1>
<font size="+1">_AD_GetObjectsInOU</font>
<hr size="2">
<p>Returns a filtered array of objects and attributes for a given OU or just the number of records if $bCount is True.<br></p>

<p class="codeheader">
#Include &lt;AD.au3&gt;<br>
_AD_GetObjectsInOU($sOU[, $sFilter = "(name=*)"[, $iSearchScope = 2[, $sDataToRetrieve = "sAMAccountName"[, $sSortBy = "sAMAccountName"[, $bCount = False[, $vReturnNull = True]]]]])<br>
</p>
<p>&nbsp;</p>

<p><b>Parameters</b></p>
<table border="1" width="100%" cellspacing="0" cellpadding="3" bordercolor="#C0C0C0">
  <tr>
    <td width="15%">$sOU</td>
    <td width="85%">The OU to retrieve from (FQDN) (default = "", equals "search the whole AD tree")</td>
  </tr>
  <tr>
   <td>$sFilter</td>
   <td>Optional: An additional LDAP filter if required (default = "(name=*)")</td>
  </tr>
  <tr>
   <td>$iSearchScope</td>
   <td>Optional: 0 = base, 1 = one-level, 2 = sub-tree (default)</td>
  </tr>
  <tr>
   <td>$sDataToRetrieve</td>
   <td>Optional: A comma-seperated list of attributes to retrieve (default = "sAMAccountName").<br>
       More than one attribute will create a 2-dimensional array</td>
  </tr>
  <tr>
   <td>$sSortBy</td>
   <td>Optional: name of the attribute the resulting array will be sorted upon (default = "sAMAccountName").<br>
       To completely suppress sorting (even the default sort) set this parameter to "". This improves performance when doing large queries</td>
  </tr>
  <tr>
   <td>$bCount</td>
   <td>Optional: If set to True only returns the number of records returned by the query (default = False)</td>
  </tr>
  <tr>
   <td>$vReturnNull</td>
   <td>Optional: If set to any other value but True Null values (occur when the property has never been set) are returned as this value (default = True)</td>
  </tr>
</table>

<p>&nbsp;</p>

<p><b>Return Value</b></p>
Success: Number of records retrieved or a one or two dimensional one-based array of objects and attributes in the given OU. First entry is for the given OU itself<br>
Failure: "", sets @error to:<br>
&nbsp;&nbsp;&nbsp; 1 - Specified OU does not exist<br>
&nbsp;&nbsp;&nbsp; 2 - No records returned from Active Directory. $sDataToRetrieve is invalid (attribute may not exist). @extended is set to the error returned by LDAP<br>
&nbsp;&nbsp;&nbsp; 3 - No records returned from Active Directory. $sFilter didn't return a record<br>
<p>&nbsp;</p>

<p><b>Remarks</b></p>
Multi-value attributes are returned as string with the pipe character (|) as separator.<br>
<br>
The default filter returns an array including one record for the OU itself. To exclude the OU use a different filter that doesn't include the OU<br>
e.g. "(&(objectcategory=person)(objectclass=user)(name=*))"<br>
<br>
To make sure that all properties you specify in $sDataToRetrieve exist in the AD you can use _AD_ObjectExistsInSchema.<br>
<br>
The following examples illustrate the use of the escaping mechanism in the LDAP filter:<br>
(o=Parens R Us \28for all your parenthetical needs\29)<br>
(cn=*\2A*)<br>
(filename=C:\5cMyFile)<br>
(bin=\00\00\00\04)<br>
(sn=Lu\c4\8di\c4\87)<br>
The first example shows the use of the escaping mechanism to represent parenthesis characters.<br>
The second shows how to represent a "*" in a value, preventing it from being interpreted as a substring indicator.<br>
The third illustrates the escaping of the backslash character.<br>
The fourth example shows a filter searching for the four-byte value 0x00000004, illustrating the use of the escaping mechanism to<br>
represent arbitrary data, including NUL characters.<br>
The final example illustrates the use of the escaping mechanism to represent various non-ASCII UTF-8 characters.<br>
<br>
<p>&nbsp;</p>

<p><b>Related</b></p>
<a href="_AD_GetAllOUs.htm">_AD_GetAllOUs</a>
<p>&nbsp;</p>

<p><b>Example</b></p>
<p class="codebox">
<br>
<span><span class="S12">#AutoIt3Wrapper_AU3Check_Parameters= -d -w 1 -w 2 -w 3 -w 4 -w 5 -w 6</span><br>
<span class="S12">#AutoIt3Wrapper_AU3Check_Stop_OnWarning=Y</span><br>
<span class="S11">#include</span><span class="S0"> </span><span class="S7">&lt;AD.au3&gt;</span><br>
<br>
<span class="S1">; Open Connection to the Active Directory</span><br>
<span class="S16">_AD_Open</span><span class="S8">()</span><br>
<span class="S5">If</span><span class="S0"> </span><span class="S6">@error</span><span class="S0"> </span><span class="S5">Then</span><span class="S0"> </span><span class="S5">Exit</span><span class="S0"> </span><span class="S4">MsgBox</span><span class="S8">(</span><span class="S3">16</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Active Directory Example Skript"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Function _AD_Open encountered a problem. @error = "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@error</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">", @extended = "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@extended</span><span class="S8">)</span><br>
<br>
<span class="S1">; Get FQDN for the currently logged on user</span><br>
<span class="S5">Global</span><span class="S0"> </span><span class="S9">$sFQDN</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S16">_AD_SamAccountNameToFQDN</span><span class="S8">()</span><br>
<br>
<span class="S1">; Strip off the CN</span><br>
<span class="S5">Global</span><span class="S0"> </span><span class="S9">$iPos</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">StringInStr</span><span class="S8">(</span><span class="S9">$sFQDN</span><span class="S8">,</span><span class="S0"> </span><span class="S7">","</span><span class="S8">)</span><br>
<span class="S5">Global</span><span class="S0"> </span><span class="S9">$sOU</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">StringMid</span><span class="S8">(</span><span class="S9">$sFQDN</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$iPos</span><span class="S0"> </span><span class="S8">+</span><span class="S0"> </span><span class="S3">1</span><span class="S8">)</span><br>
<br>
<span class="S5">Global</span><span class="S0"> </span><span class="S9">$aObjects</span><span class="S8">[</span><span class="S3">1</span><span class="S8">][</span><span class="S3">1</span><span class="S8">]</span><br>
<br>
<span class="S1">; *****************************************************************************</span><br>
<span class="S1">; Example 1</span><br>
<span class="S1">; Get the OU the current user is assigned to.</span><br>
<span class="S1">; Then get an unfiltered list of all objects in this OU.</span><br>
<span class="S1">; *****************************************************************************</span><br>
<span class="S9">$aObjects</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S16">_AD_GetObjectsInOU</span><span class="S8">(</span><span class="S9">$sOU</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"(name=*)"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">2</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"sAMAccountName,distinguishedName,displayname"</span><span class="S8">)</span><br>
<span class="S5">If</span><span class="S0"> </span><span class="S6">@error</span><span class="S0"> </span><span class="S8">&gt;</span><span class="S0"> </span><span class="S3">0</span><span class="S0"> </span><span class="S5">Then</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S4">MsgBox</span><span class="S8">(</span><span class="S3">64</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Active Directory Functions - Example 1"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"No OUs could be found"</span><span class="S8">)</span><br>
<span class="S5">Else</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S15">_ArrayDisplay</span><span class="S8">(</span><span class="S9">$aObjects</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Active Directory Functions - Example 1 - Objects in OU '"</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$sOU</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">"'"</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Global</span><span class="S0"> </span><span class="S9">$iResult</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S16">_AD_GetObjectsInOU</span><span class="S8">(</span><span class="S9">$sOU</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"(name=*)"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">2</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"sAMAccountName,distinguishedName,displayname"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S5">True</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S4">MsgBox</span><span class="S8">(</span><span class="S3">64</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Active Directory Functions - Example 1"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"This example returned "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$iResult</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">" records"</span><span class="S8">)</span><br>
<span class="S5">EndIf</span><br>
<br>
<span class="S1">; *****************************************************************************</span><br>
<span class="S1">; Example 2</span><br>
<span class="S1">; Get the OU the current user is assigned to.</span><br>
<span class="S1">; Then get a filtered list of all users in this OU that start with the first</span><br>
<span class="S1">; letter of the current user. Sort the result by displayname.</span><br>
<span class="S1">; *****************************************************************************</span><br>
<span class="S5">Global</span><span class="S0"> </span><span class="S9">$sUser</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">StringLeft</span><span class="S8">(</span><span class="S6">@UserName</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">)</span><br>
<span class="S9">$aObjects</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S16">_AD_GetObjectsInOU</span><span class="S8">(</span><span class="S9">$sOU</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"(&amp;(objectcategory=person)(objectclass=user)(cn="</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$sUser</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">"*))"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">2</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"sAMAccountName,distinguishedName,displayname"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"displayname"</span><span class="S8">)</span><br>
<span class="S5">If</span><span class="S0"> </span><span class="S6">@error</span><span class="S0"> </span><span class="S8">&gt;</span><span class="S0"> </span><span class="S3">0</span><span class="S0"> </span><span class="S5">Then</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S4">MsgBox</span><span class="S8">(</span><span class="S3">64</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Active Directory Functions - Example 2"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"No OUs could be found"</span><span class="S8">)</span><br>
<span class="S5">Else</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S15">_ArrayDisplay</span><span class="S8">(</span><span class="S9">$aObjects</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Active Directory Functions - Example 2 &nbsp;- Objects in OU '"</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$sOU</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">"'"</span><span class="S8">)</span><br>
<span class="S5">EndIf</span><br>
<br>
<span class="S1">; *****************************************************************************</span><br>
<span class="S1">; Example 3</span><br>
<span class="S1">; Use ANR (Ambigous Name Resolution) to get all objects with the same given Name</span><br>
<span class="S1">; as the current user in the ANR-supported attribute fields.</span><br>
<span class="S1">; Searches the whole domain.</span><br>
<span class="S1">; *****************************************************************************</span><br>
<span class="S5">Global</span><span class="S0"> </span><span class="S9">$sGivenName</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S16">_AD_GetObjectAttribute</span><span class="S8">(</span><span class="S6">@UserName</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"GivenName"</span><span class="S8">)</span><br>
<span class="S9">$aObjects</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S16">_AD_GetObjectsInOU</span><span class="S8">(</span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"(ANR="</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$sGivenName</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">")"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">2</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"sAMAccountName,distinguishedName,displayname"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"displayname"</span><span class="S8">)</span><br>
<span class="S5">If</span><span class="S0"> </span><span class="S6">@error</span><span class="S0"> </span><span class="S8">&gt;</span><span class="S0"> </span><span class="S3">0</span><span class="S0"> </span><span class="S5">Then</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S4">MsgBox</span><span class="S8">(</span><span class="S3">64</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Active Directory Functions - Example 3"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"No objects found"</span><span class="S8">)</span><br>
<span class="S5">Else</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S15">_ArrayDisplay</span><span class="S8">(</span><span class="S9">$aObjects</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Active Directory Functions - Example 3 &nbsp;- Ambigous Name Resolution. Search for '"</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$sGivenName</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">"'"</span><span class="S8">)</span><br>
<span class="S5">EndIf</span><br>
<br>
<span class="S5">If</span><span class="S0"> </span><span class="S4">MsgBox</span><span class="S8">(</span><span class="S3">36</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Active Directory Functions"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Would you like to see further examples using extended LDAP queries?"</span><span class="S8">)</span><span class="S0"> </span><span class="S8">&lt;&gt;</span><span class="S0"> </span><span class="S3">7</span><span class="S0"> </span><span class="S5">Then</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$sOU</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S7">""</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; ********************************</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; User accounts that do not expire</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; ********************************</span><br>
<span class="S0">&nbsp; &nbsp; _Examples</span><span class="S8">(</span><span class="S7">"(&amp;(objectCategory=person)(objectClass=user)(|(accountExpires=9223372036854775807)(accountExpires=0)))"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"sAMAccountName,distinguishedName,displayname"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"User accounts that do not expire"</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; ****************************</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; User accounts that do expire</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; ****************************</span><br>
<span class="S0">&nbsp; &nbsp; _Examples</span><span class="S8">(</span><span class="S7">"(&amp;(objectCategory=person)(objectClass=user)(!accountExpires=9223372036854775807)(!accountExpires=0))"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"sAMAccountName,distinguishedName,displayname,accountexpires"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"User accounts that do expire"</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; ***************************************</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; User accounts that already have expired</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; ***************************************</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Global</span><span class="S0"> </span><span class="S9">$sAD_DTExpire</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S15">_Date_Time_GetSystemTime</span><span class="S8">()</span><span class="S0"> </span><span class="S1">; Get current date/time</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$sAD_DTExpire</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S15">_Date_Time_SystemTimeToDateTimeStr</span><span class="S8">(</span><span class="S9">$sAD_DTExpire</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">)</span><span class="S0"> </span><span class="S1">; convert to system time</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Global</span><span class="S0"> </span><span class="S9">$iAD_DTExpire</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">Int</span><span class="S8">(</span><span class="S15">_DateDiff</span><span class="S8">(</span><span class="S7">"s"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"1601/01/01 00:00:00"</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sAD_DTExpire</span><span class="S8">)</span><span class="S0"> </span><span class="S8">*</span><span class="S0"> </span><span class="S3">10000000</span><span class="S8">)</span><span class="S0"> </span><span class="S1">; convert to Integer8</span><br>
<span class="S0">&nbsp; &nbsp; _Examples</span><span class="S8">(</span><span class="S7">"(&amp;(objectCategory=person)(objectClass=user)(!accountExpires=9223372036854775807)(!accountExpires=0)(accountExpires&lt;="</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$iAD_DTExpire</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">")"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"sAMAccountName,distinguishedName,displayname"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Expired user accounts"</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; *************************************</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Users not required to have a password</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; *************************************</span><br>
<span class="S0">&nbsp; &nbsp; _Examples</span><span class="S8">(</span><span class="S7">"(&amp;(objectCategory=person)(objectClass=user)(userAccountControl:1.2.840.113556.1.4.803:=32))"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"sAMAccountName,distinguishedName,displayname"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Users not required to have a password"</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; **********************************************************************************</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Users with any group other than "Domain Users" designated as their "primary" group</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; **********************************************************************************</span><br>
<span class="S0">&nbsp; &nbsp; _Examples</span><span class="S8">(</span><span class="S7">"(&amp;(objectCategory=person)(objectClass=user)(!primaryGroupID=513))"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"sAMAccountName,distinguishedName,displayname"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Users with any group other than 'Domain Users' designated as their 'primary group'"</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; **************************************************************</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Users that must change their password the next time they logon</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; **************************************************************</span><br>
<span class="S0">&nbsp; &nbsp; _Examples</span><span class="S8">(</span><span class="S7">"(&amp;(objectCategory=person)(objectClass=user)(pwdLastSet=0))"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"sAMAccountName,distinguishedName,displayname"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Users that must change their password the next time they logon"</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; *********************************</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Users that never logged on before</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; *********************************</span><br>
<span class="S0">&nbsp; &nbsp; _Examples</span><span class="S8">(</span><span class="S7">"(&amp;(&amp;(objectCategory=person)(objectClass=user))(|(lastLogon=0)(!(lastLogon=*))))"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"sAMAccountName,distinguishedName,displayname"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Users that never logged on before"</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; **************************</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; List of all Group Policies</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; **************************</span><br>
<span class="S0">&nbsp; &nbsp; _Examples</span><span class="S8">(</span><span class="S7">"(objectClass=groupPolicyContainer)"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"displayName,gPCFileSysPath"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"List of Group Policies"</span><span class="S8">)</span><br>
<span class="S5">EndIf</span><br>
<br>
<span class="S1">; Close Connection to the Active Directory</span><br>
<span class="S16">_AD_Close</span><span class="S8">()</span><br>
<br>
<span class="S1">; **********************************************************</span><br>
<span class="S1">; Executes LDAP queries and displays the results in an Array</span><br>
<span class="S1">; **********************************************************</span><br>
<span class="S5">Func</span><span class="S0"> _Examples</span><span class="S8">(</span><span class="S9">$query</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$fields</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$description</span><span class="S8">)</span><br>
<br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Local</span><span class="S0"> </span><span class="S9">$aObjects</span><span class="S8">[</span><span class="S3">1</span><span class="S8">][</span><span class="S3">1</span><span class="S8">]</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$aObjects</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S16">_AD_GetObjectsInOU</span><span class="S8">(</span><span class="S9">$sOU</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$query</span><span class="S8">,</span><span class="S0"> </span><span class="S3">2</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$fields</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">If</span><span class="S0"> </span><span class="S6">@error</span><span class="S0"> </span><span class="S8">&lt;&gt;</span><span class="S0"> </span><span class="S3">0</span><span class="S0"> </span><span class="S5">Then</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S4">MsgBox</span><span class="S8">(</span><span class="S3">64</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Active Directory Functions - Extended Example"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"No entries found for LDAP query "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@CRLF</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$query</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@CRLF</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$description</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@CRLF</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">"Error: "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@error</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Else</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S15">_ArrayDisplay</span><span class="S8">(</span><span class="S9">$aObjects</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"LDAP query - "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$description</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">" - "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$query</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">EndIf</span><br>
<br>
<span class="S5">EndFunc</span><span class="S0"> &nbsp;&nbsp;</span><span class="S1">;==&gt;_Examples</span></span><br>
<br><OBJECT id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11" width=58 height=57>
<PARAM name="Command" value="ShortCut">
<PARAM name="Button" value="Text:Open this Script">
<PARAM name="Item1" value=",Examples\HelpFile\_AD_GetObjectsInOU.au3,">
</OBJECT>
<p>&nbsp;</p>

</body>
</html>
