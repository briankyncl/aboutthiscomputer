<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <title>Function _AD_RecursiveGetGroupMembers</title>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
  <link href="../css/default.css" rel="stylesheet" type="text/css">
</head>

<body>
<h1>Function Reference</h1>
<font size="+1">_AD_RecursiveGetGroupMembers</font>
<hr size="2">
<p>Takes a group and recursively returns a list of groups and members of the group.<br></p>

<p class="codeheader">
#Include &lt;AD.au3&gt;<br>
_AD_RecursiveGetGroupMembers($sGroup[, $iDepth = 10[, $bListInherited = True[, $bFQDN = True]]])<br>
</p>
<p>&nbsp;</p>

<p><b>Parameters</b></p>
<table border="1" width="100%" cellspacing="0" cellpadding="3" bordercolor="#C0C0C0">
  <tr>
    <td width="15%">$sGroup</td>
    <td width="85%">Group for which the members should to be returned. Can be specified as Fully Qualified Domain Name (FQDN) or sAMAccountName</td>
  </tr>
  <tr>
   <td>$iDepth</td>
   <td>Optional: Maximum depth of recursion (default = 10)</td>
  </tr>
  <tr>
   <td>$bListInherited</td>
   <td>Optional: Defines if the function returns the group it is a member of (default = True)</td>
  </tr>
  <tr>
   <td>$bFQDN</td>
   <td>Optional: Specifies the attribute to be returned. True = distinguishedName (FQDN), False = SamAccountName (default = True)</td>
  </tr>
</table>

<p>&nbsp;</p>

<p><b>Return Value</b></p>
Success: Returns an one-based one dimensional array of group or member names (FQDN or sAMAccountName)<br>
Failure: "", sets @error to:<br>
&nbsp;&nbsp;&nbsp; 1 - Specified group does not exist<br>
<p>&nbsp;</p>

<p><b>Remarks</b></p>
This function traverses the groups in the specified group until the maximum depth is reached.<br>
if $bListInherited = True the return is the FQDN or sAMAccountname of the group or member and the FQDN(s) or sAMAccountname(s) of the group it<br>
is a member of, seperated by '|'(s) if flag $bListInherited is set to True.<br>
<br>
If flag $bListInherited is set to False then the group/member names are sorted and only unique entries are returned.<br>
<br>
<p>&nbsp;</p>

<p><b>Related</b></p>
<a href="_AD_GetGroupMembers.htm">_AD_GetGroupMembers</a>
<p>&nbsp;</p>

<p><b>Example</b></p>
<p class="codebox">
<br>
<span><span class="S12">#AutoIt3Wrapper_AU3Check_Parameters= -d -w 1 -w 2 -w 3 -w 4 -w 5 -w 6</span><br>
<span class="S12">#AutoIt3Wrapper_AU3Check_Stop_OnWarning=Y</span><br>
<span class="S1">; *****************************************************************************</span><br>
<span class="S1">; Example 1</span><br>
<span class="S1">; Get a list of all groups the current user is a member of.</span><br>
<span class="S1">; Then get a recursively searched list of all group members for the first group</span><br>
<span class="S1">; Recursion level is 10, inherited group names will be returned.</span><br>
<span class="S1">; *****************************************************************************</span><br>
<span class="S11">#include</span><span class="S0"> </span><span class="S7">&lt;AD.au3&gt;</span><br>
<br>
<span class="S5">Global</span><span class="S0"> </span><span class="S9">$aGroups</span><span class="S8">[</span><span class="S3">1</span><span class="S8">],</span><span class="S0"> </span><span class="S9">$aMembers</span><span class="S8">[</span><span class="S3">1</span><span class="S8">]</span><br>
<br>
<span class="S1">; Open Connection to the Active Directory</span><br>
<span class="S16">_AD_Open</span><span class="S8">()</span><br>
<span class="S5">If</span><span class="S0"> </span><span class="S6">@error</span><span class="S0"> </span><span class="S5">Then</span><span class="S0"> </span><span class="S5">Exit</span><span class="S0"> </span><span class="S4">MsgBox</span><span class="S8">(</span><span class="S3">16</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Active Directory Example Skript"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Function _AD_Open encountered a problem. @error = "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@error</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">", @extended = "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@extended</span><span class="S8">)</span><br>
<br>
<span class="S1">; Get an array of group names (FQDN) that the user is immediately a member of</span><br>
<span class="S9">$aGroups</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S16">_AD_GetUserGroups</span><span class="S8">()</span><br>
<span class="S5">If</span><span class="S0"> </span><span class="S6">@error</span><span class="S0"> </span><span class="S8">&gt;</span><span class="S0"> </span><span class="S3">0</span><span class="S0"> </span><span class="S5">Then</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S4">MsgBox</span><span class="S8">(</span><span class="S3">64</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Active Directory Functions - Example 1"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"The current user is not a member of any group"</span><span class="S8">)</span><br>
<span class="S5">Else</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Get a recursively searched list of members for the first group</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$aMembers</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> _AD_RecursiveGetGroupMembers</span><span class="S8">(</span><span class="S9">$aGroups</span><span class="S8">[</span><span class="S3">1</span><span class="S8">],</span><span class="S0"> </span><span class="S3">10</span><span class="S8">,</span><span class="S0"> </span><span class="S5">True</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">If</span><span class="S0"> </span><span class="S6">@error</span><span class="S0"> </span><span class="S8">&gt;</span><span class="S0"> </span><span class="S3">0</span><span class="S0"> </span><span class="S5">Then</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S4">MsgBox</span><span class="S8">(</span><span class="S3">64</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Active Directory Functions - Example 1"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"The group '"</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$aGroups</span><span class="S8">[</span><span class="S3">1</span><span class="S8">]</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">"' has no members"</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Else</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S15">_ArrayDisplay</span><span class="S8">(</span><span class="S9">$aMembers</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Active Directory Functions - Example 1 - Recursive list of members for group '"</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$aGroups</span><span class="S8">[</span><span class="S3">1</span><span class="S8">]</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">"'"</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">EndIf</span><br>
<span class="S5">EndIf</span><br>
<br>
<span class="S1">; Close Connection to the Active Directory</span><br>
<span class="S16">_AD_Close</span><span class="S8">()</span><br>
<span class="S0"></span></span><br>
<br><OBJECT id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11" width=58 height=57>
<PARAM name="Command" value="ShortCut">
<PARAM name="Button" value="Text:Open this Script">
<PARAM name="Item1" value=",Examples\HelpFile\_AD_RecursiveGetGroupMembers.au3,">
</OBJECT>
<p>&nbsp;</p>

</body>
</html>
